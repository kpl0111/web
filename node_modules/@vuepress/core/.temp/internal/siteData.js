/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "Nefelibata",
  "description": "",
  "base": "/vuepress-demo/",
  "headTags": [
    [
      "link",
      {
        "rel": "icon",
        "href": "/vuepress-demo/avatar.png"
      }
    ],
    [
      "link",
      {
        "rel": "manifest",
        "href": "/vuepress-demo/avatar.png"
      }
    ],
    [
      "link",
      {
        "rel": "apple-touch-icon",
        "href": "/vuepress-demo/avatar.png"
      }
    ]
  ],
  "pages": [
    {
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "/spider.png",
        "heroText": "我的主页",
        "tagline": "My homepage",
        "actionText": "技术文档 →",
        "actionLink": "/tech/interview/",
        "features": [
          {
            "title": "简洁至上",
            "details": "以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。"
          },
          {
            "title": "Vue驱动",
            "details": "享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。"
          },
          {
            "title": "高性能",
            "details": "VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。"
          }
        ],
        "footer": "Nefelibata"
      },
      "regularPath": "/",
      "relativePath": "README.md",
      "key": "v-15ba78bc",
      "path": "/"
    },
    {
      "title": "前端面试宝典(自用)",
      "frontmatter": {},
      "regularPath": "/tech/interview/",
      "relativePath": "tech/interview/README.md",
      "key": "v-18c253b8",
      "path": "/tech/interview/",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "css相关",
          "slug": "css相关"
        },
        {
          "level": 3,
          "title": "1. 万能居中",
          "slug": "_1-万能居中"
        },
        {
          "level": 3,
          "title": "2. BFC优化",
          "slug": "_2-bfc优化"
        },
        {
          "level": 3,
          "title": "3. 盒模型哪两种模式？什么区别？如何设置",
          "slug": "_3-盒模型哪两种模式-什么区别-如何设置"
        },
        {
          "level": 3,
          "title": "4. 常用清除浮动的方法，如不清除浮动会怎样？",
          "slug": "_4-常用清除浮动的方法-如不清除浮动会怎样"
        },
        {
          "level": 3,
          "title": "5. 删格化的原理",
          "slug": "_5-删格化的原理"
        },
        {
          "level": 3,
          "title": "6. 纯css实现三角形",
          "slug": "_6-纯css实现三角形"
        },
        {
          "level": 3,
          "title": "7. 高度不定，宽100%，内一div高不确定，如何实现垂直居中？",
          "slug": "_7-高度不定-宽100-内一div高不确定-如何实现垂直居中"
        },
        {
          "level": 3,
          "title": "8. 至少两种方式实现自适应布局",
          "slug": "_8-至少两种方式实现自适应布局"
        },
        {
          "level": 3,
          "title": "9. 设置一段文字的大小为6px",
          "slug": "_9-设置一段文字的大小为6px"
        },
        {
          "level": 3,
          "title": "10. css菊花图",
          "slug": "_10-css菊花图"
        },
        {
          "level": 3,
          "title": "11. 关于em",
          "slug": "_11-关于em"
        },
        {
          "level": 3,
          "title": "12. 关于vh, vw",
          "slug": "_12-关于vh-vw"
        },
        {
          "level": 3,
          "title": "13. Flex布局",
          "slug": "_13-flex布局"
        },
        {
          "level": 3,
          "title": "14. overflow原理",
          "slug": "_14-overflow原理"
        },
        {
          "level": 3,
          "title": "15. 实现自适应的正方形:",
          "slug": "_15-实现自适应的正方形"
        },
        {
          "level": 3,
          "title": "16. 标准模式和怪异模式",
          "slug": "_16-标准模式和怪异模式"
        },
        {
          "level": 3,
          "title": "17. CSS3实现环形进度条",
          "slug": "_17-css3实现环形进度条"
        },
        {
          "level": 3,
          "title": "18. css优先级",
          "slug": "_18-css优先级"
        },
        {
          "level": 2,
          "title": "JS相关",
          "slug": "js相关"
        },
        {
          "level": 3,
          "title": "1. ES5和ES6继承方式区别",
          "slug": "_1-es5和es6继承方式区别"
        },
        {
          "level": 3,
          "title": "2. Generator了解",
          "slug": "_2-generator了解"
        },
        {
          "level": 3,
          "title": "3. 手写Promise实现",
          "slug": "_3-手写promise实现"
        },
        {
          "level": 3,
          "title": "4. Promise优缺点",
          "slug": "_4-promise优缺点"
        },
        {
          "level": 3,
          "title": "5. 观察者模式",
          "slug": "_5-观察者模式"
        },
        {
          "level": 3,
          "title": "6. 手写实现bind",
          "slug": "_6-手写实现bind"
        },
        {
          "level": 3,
          "title": "7. 手写实现4种继承",
          "slug": "_7-手写实现4种继承"
        },
        {
          "level": 3,
          "title": "9. http状态码",
          "slug": "_9-http状态码"
        },
        {
          "level": 3,
          "title": "10. Object.create实现（原型式继承，特点：实例的_proto_指向构造函数本身）",
          "slug": "_10-object-create实现-原型式继承-特点-实例的-proto-指向构造函数本身"
        },
        {
          "level": 3,
          "title": "11. async和await：(ES8)",
          "slug": "_11-async和await-es8"
        },
        {
          "level": 3,
          "title": "12. 算法和数据结构：",
          "slug": "_12-算法和数据结构"
        },
        {
          "level": 3,
          "title": "13. 封装JSONP",
          "slug": "_13-封装jsonp"
        },
        {
          "level": 3,
          "title": "14. 手动实现map(forEach以及filter也类似)",
          "slug": "_14-手动实现map-foreach以及filter也类似"
        },
        {
          "level": 3,
          "title": "15. js实现checkbox全选以及反选",
          "slug": "_15-js实现checkbox全选以及反选"
        },
        {
          "level": 3,
          "title": "16. 对原型链的理解？prototype上都有哪些属性",
          "slug": "_16-对原型链的理解-prototype上都有哪些属性"
        },
        {
          "level": 3,
          "title": "17. 为什么使用继承",
          "slug": "_17-为什么使用继承"
        },
        {
          "level": 3,
          "title": "18. setTimeout时间延迟为何不准",
          "slug": "_18-settimeout时间延迟为何不准"
        },
        {
          "level": 3,
          "title": "19. 事件循环述，宏任务和微任务有什么区别？",
          "slug": "_19-事件循环述-宏任务和微任务有什么区别"
        },
        {
          "level": 3,
          "title": "20. let const var作用域",
          "slug": "_20-let-const-var作用域"
        },
        {
          "level": 3,
          "title": "21. 节流和防抖",
          "slug": "_21-节流和防抖"
        },
        {
          "level": 3,
          "title": "22. 实现一个sleep函数",
          "slug": "_22-实现一个sleep函数"
        },
        {
          "level": 3,
          "title": "23. 闭包",
          "slug": "_23-闭包"
        },
        {
          "level": 3,
          "title": "24. Immutable.js",
          "slug": "_24-immutable-js"
        },
        {
          "level": 3,
          "title": "25. js实现instanceof",
          "slug": "_25-js实现instanceof"
        },
        {
          "level": 3,
          "title": "27. ES6的模块引入和CommonJs区别",
          "slug": "_27-es6的模块引入和commonjs区别"
        },
        {
          "level": 3,
          "title": "28. 严格模式",
          "slug": "_28-严格模式"
        },
        {
          "level": 3,
          "title": "30. typescript缺点",
          "slug": "_30-typescript缺点"
        },
        {
          "level": 3,
          "title": "31. 构造函数实现原理（new操作符做了什么）",
          "slug": "_31-构造函数实现原理-new操作符做了什么"
        },
        {
          "level": 3,
          "title": "32. for in 和 for of区别",
          "slug": "_32-for-in-和-for-of区别"
        },
        {
          "level": 3,
          "title": "33. JS实现并发控制:",
          "slug": "_33-js实现并发控制"
        },
        {
          "level": 3,
          "title": "34. ajax和axios、fetch的区别",
          "slug": "_34-ajax和axios、fetch的区别"
        },
        {
          "level": 3,
          "title": "35. promise.finally实现",
          "slug": "_35-promise-finally实现"
        },
        {
          "level": 3,
          "title": "36. 实现symbol",
          "slug": "_36-实现symbol"
        },
        {
          "level": 3,
          "title": "37. ES6装饰器",
          "slug": "_37-es6装饰器"
        },
        {
          "level": 3,
          "title": "38. 实现fetch abort",
          "slug": "_38-实现fetch-abort"
        },
        {
          "level": 3,
          "title": "39. 使用xhr实现fetch",
          "slug": "_39-使用xhr实现fetch"
        },
        {
          "level": 3,
          "title": "40. JS中数值存储",
          "slug": "_40-js中数值存储"
        },
        {
          "level": 3,
          "title": "41. this指向：",
          "slug": "_41-this指向"
        },
        {
          "level": 2,
          "title": "浏览器网络相关",
          "slug": "浏览器网络相关"
        },
        {
          "level": 3,
          "title": "1. reflow(回流)和repaint(重绘)优化",
          "slug": "_1-reflow-回流-和repaint-重绘-优化"
        },
        {
          "level": 3,
          "title": "2.一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？",
          "slug": "_2-一个页面从输入-url-到页面加载显示完成-这个过程中都发生了什么"
        },
        {
          "level": 3,
          "title": "3.localStorage 与 sessionStorage 与cookie的区别总结",
          "slug": "_3-localstorage-与-sessionstorage-与cookie的区别总结"
        },
        {
          "level": 3,
          "title": "4.浏览器如何阻止事件传播，阻止默认行为",
          "slug": "_4-浏览器如何阻止事件传播-阻止默认行为"
        },
        {
          "level": 3,
          "title": "5.虚拟DOM方案相对原生DOM操作有什么优点，实现上是什么原理？",
          "slug": "_5-虚拟dom方案相对原生dom操作有什么优点-实现上是什么原理"
        },
        {
          "level": 3,
          "title": "6.浏览器事件机制中事件触发三个阶段",
          "slug": "_6-浏览器事件机制中事件触发三个阶段"
        },
        {
          "level": 3,
          "title": "7.什么是跨域？为什么浏览器要使用同源策略？你有几种方式可以解决跨域问题？了解预检请求嘛？",
          "slug": "_7-什么是跨域-为什么浏览器要使用同源策略-你有几种方式可以解决跨域问题-了解预检请求嘛"
        },
        {
          "level": 3,
          "title": "8.了解浏览器缓存机制吗？",
          "slug": "_8-了解浏览器缓存机制吗"
        },
        {
          "level": 3,
          "title": "9.为什么操作 DOM 慢?",
          "slug": "_9-为什么操作-dom-慢"
        },
        {
          "level": 3,
          "title": "10.什么情况会阻塞渲染？",
          "slug": "_10-什么情况会阻塞渲染"
        },
        {
          "level": 3,
          "title": "11.如何判断js运行在浏览器中还是node中？",
          "slug": "_11-如何判断js运行在浏览器中还是node中"
        },
        {
          "level": 3,
          "title": "12.关于web以及浏览器处理预加载有哪些思考？",
          "slug": "_12-关于web以及浏览器处理预加载有哪些思考"
        },
        {
          "level": 3,
          "title": "13.http多路复用",
          "slug": "_13-http多路复用"
        },
        {
          "level": 3,
          "title": "14. http和https：",
          "slug": "_14-http和https"
        },
        {
          "level": 3,
          "title": "15.  CSRF和XSS区别及防御",
          "slug": "_15-csrf和xss区别及防御"
        },
        {
          "level": 3,
          "title": "16. cookie可设置哪些属性？httponly?",
          "slug": "_16-cookie可设置哪些属性-httponly"
        },
        {
          "level": 3,
          "title": "17. 登录后，前端做了哪些工作，如何得知已登录",
          "slug": "_17-登录后-前端做了哪些工作-如何得知已登录"
        },
        {
          "level": 3,
          "title": "18. http状态码",
          "slug": "_18-http状态码"
        },
        {
          "level": 3,
          "title": "19.  Http请求头缓存设置方法",
          "slug": "_19-http请求头缓存设置方法"
        },
        {
          "level": 3,
          "title": "20. 实现页面回退刷新",
          "slug": "_20-实现页面回退刷新"
        },
        {
          "level": 3,
          "title": "21. 正向代理和反向代理",
          "slug": "_21-正向代理和反向代理"
        },
        {
          "level": 3,
          "title": "22. 关于预检请求",
          "slug": "_22-关于预检请求"
        },
        {
          "level": 3,
          "title": "23. 三次握手四次挥手",
          "slug": "_23-三次握手四次挥手"
        },
        {
          "level": 3,
          "title": "24. TCP和UDP协议",
          "slug": "_24-tcp和udp协议"
        },
        {
          "level": 3,
          "title": "25. 进程和线程的区别",
          "slug": "_25-进程和线程的区别"
        },
        {
          "level": 2,
          "title": "vue相关",
          "slug": "vue相关"
        },
        {
          "level": 3,
          "title": "1. 生命周期",
          "slug": "_1-生命周期"
        },
        {
          "level": 3,
          "title": "2 .双向数据绑定v-model。这个最好也是自己实现一下 理解更深",
          "slug": "_2-双向数据绑定v-model。这个最好也是自己实现一下-理解更深"
        },
        {
          "level": 3,
          "title": "3.vue父子组件传递参数",
          "slug": "_3-vue父子组件传递参数"
        },
        {
          "level": 3,
          "title": "4.vue传递参数方法",
          "slug": "_4-vue传递参数方法"
        },
        {
          "level": 3,
          "title": "5.vue自定义组件",
          "slug": "_5-vue自定义组件"
        },
        {
          "level": 3,
          "title": "6. vue自定义指令",
          "slug": "_6-vue自定义指令"
        },
        {
          "level": 3,
          "title": "7.vuex组成和原理",
          "slug": "_7-vuex组成和原理"
        },
        {
          "level": 3,
          "title": "8.vue-router的原理，例如hashhistory和History interface这些东西要弄明白。其实看一下源码就好了，看不懂可以直接看解析的相关技术博客。",
          "slug": "_8-vue-router的原理-例如hashhistory和history-interface这些东西要弄明白。其实看一下源码就好了-看不懂可以直接看解析的相关技术博客。"
        },
        {
          "level": 3,
          "title": "9.vue的seo问题",
          "slug": "_9-vue的seo问题"
        },
        {
          "level": 3,
          "title": "10.预渲染和ssr",
          "slug": "_10-预渲染和ssr"
        },
        {
          "level": 3,
          "title": "11.生命周期内create和mounted的区别",
          "slug": "_11-生命周期内create和mounted的区别"
        },
        {
          "level": 3,
          "title": "12.监听watch",
          "slug": "_12-监听watch"
        },
        {
          "level": 3,
          "title": "13.登录验证拦截(通过router)",
          "slug": "_13-登录验证拦截-通过router"
        },
        {
          "level": 3,
          "title": "14. v-for key值",
          "slug": "_14-v-for-key值"
        },
        {
          "level": 3,
          "title": "15. vue3.0的更新和defineProperty优化",
          "slug": "_15-vue3-0的更新和defineproperty优化"
        },
        {
          "level": 3,
          "title": "15. vue使用this获取变量",
          "slug": "_15-vue使用this获取变量"
        },
        {
          "level": 3,
          "title": "16.  jQuery的优缺点，与vue的不同，vue的优缺点？",
          "slug": "_16-jquery的优缺点-与vue的不同-vue的优缺点"
        },
        {
          "level": 3,
          "title": "17. vue解除双向绑定",
          "slug": "_17-vue解除双向绑定"
        },
        {
          "level": 3,
          "title": "18. vue异步组件",
          "slug": "_18-vue异步组件"
        },
        {
          "level": 3,
          "title": "19. MVC与MVVM",
          "slug": "_19-mvc与mvvm"
        },
        {
          "level": 3,
          "title": "20. vue渐进式",
          "slug": "_20-vue渐进式"
        },
        {
          "level": 2,
          "title": "react相关",
          "slug": "react相关"
        },
        {
          "level": 3,
          "title": "1. 新旧生命周期",
          "slug": "_1-新旧生命周期"
        },
        {
          "level": 3,
          "title": "2. react核心",
          "slug": "_2-react核心"
        },
        {
          "level": 3,
          "title": "3. fiber核心(react 16)",
          "slug": "_3-fiber核心-react-16"
        },
        {
          "level": 3,
          "title": "4. 渲染一个react",
          "slug": "_4-渲染一个react"
        },
        {
          "level": 3,
          "title": "5. 高阶组件",
          "slug": "_5-高阶组件"
        },
        {
          "level": 3,
          "title": "6. hook(v16.7测试)",
          "slug": "_6-hook-v16-7测试"
        },
        {
          "level": 3,
          "title": "7. redux和vuex以及dva：",
          "slug": "_7-redux和vuex以及dva"
        },
        {
          "level": 3,
          "title": "8. react和vue的区别",
          "slug": "_8-react和vue的区别"
        },
        {
          "level": 3,
          "title": "9. react单向数据流怎么理解",
          "slug": "_9-react单向数据流怎么理解"
        },
        {
          "level": 3,
          "title": "10. React算法复杂度优化",
          "slug": "_10-react算法复杂度优化"
        },
        {
          "level": 3,
          "title": "11. React优点",
          "slug": "_11-react优点"
        },
        {
          "level": 3,
          "title": "12. React事件机制",
          "slug": "_12-react事件机制"
        },
        {
          "level": 2,
          "title": "移动端相关",
          "slug": "移动端相关"
        },
        {
          "level": 3,
          "title": "1. 移动端兼容适配",
          "slug": "_1-移动端兼容适配"
        },
        {
          "level": 3,
          "title": "2. flexible如何实现自动判断dpr",
          "slug": "_2-flexible如何实现自动判断dpr"
        },
        {
          "level": 3,
          "title": "3. 为什么以iPhone6为标准的设计稿的尺寸是以750px宽度来设计的呢？",
          "slug": "_3-为什么以iphone6为标准的设计稿的尺寸是以750px宽度来设计的呢"
        },
        {
          "level": 3,
          "title": "4. 如何处理异形屏iphone X",
          "slug": "_4-如何处理异形屏iphone-x"
        },
        {
          "level": 3,
          "title": "5. 移动端首屏优化",
          "slug": "_5-移动端首屏优化"
        },
        {
          "level": 3,
          "title": "6. PWA全称Progressive Web App，即渐进式WEB应用",
          "slug": "_6-pwa全称progressive-web-app-即渐进式web应用"
        },
        {
          "level": 3,
          "title": "7. 离线包方案",
          "slug": "_7-离线包方案"
        },
        {
          "level": 3,
          "title": "8. 自适应和响应式布局的区别",
          "slug": "_8-自适应和响应式布局的区别"
        },
        {
          "level": 2,
          "title": "插件及工具相关",
          "slug": "插件及工具相关"
        },
        {
          "level": 3,
          "title": "1. babel和polyfill",
          "slug": "_1-babel和polyfill"
        },
        {
          "level": 3,
          "title": "2. jpg, jpeg和png区别",
          "slug": "_2-jpg-jpeg和png区别"
        },
        {
          "level": 3,
          "title": "3. git rebase和merge区别",
          "slug": "_3-git-rebase和merge区别"
        },
        {
          "level": 2,
          "title": "原生通信",
          "slug": "原生通信"
        },
        {
          "level": 3,
          "title": "1.JSBridge通信原理, 有哪几种实现的方式？",
          "slug": "_1-jsbridge通信原理-有哪几种实现的方式"
        },
        {
          "level": 2,
          "title": "算法相关",
          "slug": "算法相关"
        },
        {
          "level": 3,
          "title": "1. 二分查找和冒泡排序",
          "slug": "_1-二分查找和冒泡排序"
        },
        {
          "level": 3,
          "title": "2. 快速排序",
          "slug": "_2-快速排序"
        },
        {
          "level": 3,
          "title": "3. 最长公共子串",
          "slug": "_3-最长公共子串"
        },
        {
          "level": 3,
          "title": "4. 最长公共子序列(LCS动态规划)",
          "slug": "_4-最长公共子序列-lcs动态规划"
        },
        {
          "level": 3,
          "title": "5. 数组去重，多种方法",
          "slug": "_5-数组去重-多种方法"
        },
        {
          "level": 3,
          "title": "6. 实现一个函数功能：sum(1,2,3,4..n)转化为 sum(1)(2)(3)(4)…(n)",
          "slug": "_6-实现一个函数功能-sum-1-2-3-4-n-转化为-sum-1-2-3-4-n"
        },
        {
          "level": 3,
          "title": "7. 反转二叉树",
          "slug": "_7-反转二叉树"
        },
        {
          "level": 3,
          "title": "8. 贪心算法解决背包问题",
          "slug": "_8-贪心算法解决背包问题"
        },
        {
          "level": 3,
          "title": "9. 输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的。",
          "slug": "_9-输入一个递增排序的数组和一个数字s-在数组中查找两个数-使得他们的和正好是s-如果有多对数字的和等于s-输出两个数的乘积最小的。"
        },
        {
          "level": 3,
          "title": "10. 二叉树各种(层序)遍历",
          "slug": "_10-二叉树各种-层序-遍历"
        },
        {
          "level": 3,
          "title": "11. 各种排序",
          "slug": "_11-各种排序"
        },
        {
          "level": 3,
          "title": "12. 使用尾递归对斐波那契优化",
          "slug": "_12-使用尾递归对斐波那契优化"
        },
        {
          "level": 3,
          "title": "13. 两个升序数组合并为一个升序数组",
          "slug": "_13-两个升序数组合并为一个升序数组"
        },
        {
          "level": 2,
          "title": "node相关",
          "slug": "node相关"
        },
        {
          "level": 3,
          "title": "1. node的router是什么",
          "slug": "_1-node的router是什么"
        },
        {
          "level": 3,
          "title": "2. 数据库索引是啥",
          "slug": "_2-数据库索引是啥"
        },
        {
          "level": 3,
          "title": "3. 浏览器的事件循环和node事件循环有什么区别？",
          "slug": "_3-浏览器的事件循环和node事件循环有什么区别"
        },
        {
          "level": 3,
          "title": "4. 关于buffer",
          "slug": "_4-关于buffer"
        }
      ]
    },
    {
      "title": "你必须知道的JS柯里化",
      "frontmatter": {},
      "regularPath": "/tech/curry/",
      "relativePath": "tech/curry/README.md",
      "key": "v-06f782f8",
      "path": "/tech/curry/",
      "headers": [
        {
          "level": 3,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 3,
          "title": "什么是柯里化（Currying）",
          "slug": "什么是柯里化-currying"
        },
        {
          "level": 3,
          "title": "举个简单的栗子",
          "slug": "举个简单的栗子"
        },
        {
          "level": 3,
          "title": "柯里化的应用",
          "slug": "柯里化的应用"
        },
        {
          "level": 3,
          "title": "通用的柯里函数",
          "slug": "通用的柯里函数"
        },
        {
          "level": 3,
          "title": "使用递归实现curry函数",
          "slug": "使用递归实现curry函数"
        },
        {
          "level": 3,
          "title": "结语",
          "slug": "结语"
        }
      ]
    }
  ],
  "themeConfig": {
    "logo": "/avatar.png",
    "nav": [
      {
        "text": "首页",
        "link": "/"
      },
      {
        "text": "github",
        "link": "https://github.com/kpl0111"
      },
      {
        "text": "Home",
        "link": "https://kpl0111.github.io/"
      }
    ],
    "sidebar": "auto",
    "sidebarDepth": 2
  }
}